package com.learnnow.service;

import java.util.List;
import java.util.Optional;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.learnnow.dao.UserEntityDao;
import com.learnnow.exception.ResourceNotFoundException;
import com.learnnow.pojo.UserEntity;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class UserEntityService {

	public final UserEntityDao userEntityDao;
    	
	    public ResponseEntity<?> getUserById(Long id) {
	        UserEntity user = userEntityDao.findByIdAndIsActiveTrue(id)
	                .orElseThrow(() -> new ResourceNotFoundException("User with ID " + id + " not found"));

	        return ResponseEntity.ok(user);
	    }

	    public ResponseEntity<?> getAllActiveUsers() {
	        List<UserEntity> users = userEntityDao.findByIsActiveTrue();
	        return ResponseEntity.ok(users);
	    }

	    public ResponseEntity<?> softDeleteUser(Long id) {
	        Optional<UserEntity> userOpt = userEntityDao.findById(id);
	        if (userOpt.isPresent()) {
	            UserEntity user = userOpt.get();
	            user.setActive(false);
	            userEntityDao.save(user);
	            return ResponseEntity.ok("User soft deleted successfully");
	        }
	        return ResponseEntity.notFound().build();
	    }
}
